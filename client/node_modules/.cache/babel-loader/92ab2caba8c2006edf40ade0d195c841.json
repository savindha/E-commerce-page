{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyAsICmj1bJ3Mb5ZxYrMJVV3wq71fcqis6w\",\n  authDomain: \"crwn-db-5ce93.firebaseapp.com\",\n  projectId: \"crwn-db-5ce93\",\n  storageBucket: \"crwn-db-5ce93.appspot.com\",\n  messagingSenderId: \"964981204869\",\n  appId: \"1:964981204869:web:729e22774e00ab927cc6ec\",\n  measurementId: \"G-EM2PM8GNER\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating the user profile\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);","map":{"version":3,"sources":["C:/ZTM/React-Advanced-Course/E-Commerse/crwn-clothing/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,SAAS,EAAE,eAHA;AAIXC,EAAAA,aAAa,EAAE,2BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AACDC,QAAAA,KADC;AACMC,QAAAA,SADN;AACiB,WAAGV;AADpB,OAAZ,CAAN;AAIH,KALD,CAMA,OAAOa,KAAP,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAAK,CAACG,OAArD;AACH;AACJ;;AACD,SAAOf,OAAP;AACH,CAnBM;AAqBPZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAsICmj1bJ3Mb5ZxYrMJVV3wq71fcqis6w\",\r\n    authDomain: \"crwn-db-5ce93.firebaseapp.com\",\r\n    projectId: \"crwn-db-5ce93\",\r\n    storageBucket: \"crwn-db-5ce93.appspot.com\",\r\n    messagingSenderId: \"964981204869\",\r\n    appId: \"1:964981204869:web:729e22774e00ab927cc6ec\",\r\n    measurementId: \"G-EM2PM8GNER\"\r\n};\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n    const snapShot = await userRef.get()\r\n\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n        try {\r\n            await userRef.set({\r\n                displayName, email, createdAt, ...additionalData\r\n            })\r\n\r\n        }\r\n        catch (error) {\r\n            console.log(\"Error creating the user profile\", error.message)\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n"]},"metadata":{},"sourceType":"module"}